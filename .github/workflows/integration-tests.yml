name: Integration Tests

on:
  push:
    branches: [ main, dylon/*, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Checkout f1r3node dependency
      run: |
        cd ../
        git clone --depth=1 --branch dylon/mettatron https://github.com/F1R3FLY-io/f1r3node.git f1r3node

    - name: Checkout MORK dependency
      run: |
        cd ../
        git clone --depth=1 --branch main https://github.com/trueagi-io/MORK.git MORK

    - name: Checkout PathMap dependency
      run: |
        cd ../
        git clone --depth=1 --branch master https://github.com/Adam-Vandervorst/PathMap.git PathMap

    - name: Install protobuf compiler
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-target-

    - name: Build MeTTaTron
      run: |
        echo "::group::Building MeTTaTron"
        cargo build --release --verbose
        ls -lh target/release/mettatron
        echo "::endgroup::"

    - name: Build rholang-cli
      run: |
        echo "::group::Building rholang-cli"
        cd ../f1r3node/rholang
        cargo build --release --bin rholang-cli --verbose
        ls -lh ../target/release/rholang-cli
        echo "::endgroup::"

    - name: Run unit tests
      run: |
        echo "::group::Running unit tests"
        cargo test --lib --verbose
        echo "::endgroup::"

    - name: Run integration tests
      run: |
        echo "::group::Running integration tests"
        cargo test --test rholang_integration --verbose -- --nocapture
        echo "::endgroup::"

    - name: Run integration tests with test runner
      run: |
        echo "::group::Running async test runner"
        cargo test --test rholang_integration test_async_runner -- --nocapture
        echo "::endgroup::"

    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/debug/
          integration/*.rho
          tests/*.rs
        retention-days: 7

    - name: Copy rholang-cli to workspace
      if: success()
      run: cp ../f1r3node/target/release/rholang-cli target/release/

    - name: Upload binaries
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: mettatron-binaries
        path: |
          target/release/mettatron
          target/release/rholang-cli
        retention-days: 30

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Checkout f1r3node dependency
      run: |
        cd ../
        git clone --depth=1 --branch dylon/mettatron https://github.com/F1R3FLY-io/f1r3node.git f1r3node

    - name: Checkout MORK dependency
      run: |
        cd ../
        git clone --depth=1 --branch main https://github.com/trueagi-io/MORK.git MORK

    - name: Checkout PathMap dependency
      run: |
        cd ../
        git clone --depth=1 --branch master https://github.com/Adam-Vandervorst/PathMap.git PathMap

    - name: Install protobuf compiler
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt, clippy

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  test-report:
    name: Test Report Summary
    runs-on: ubuntu-latest
    needs: [integration-tests, lint]
    if: always()

    steps:
    - name: Generate summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.integration-tests.result }}" == "success" ] && [ "${{ needs.lint.result }}" == "success" ]; then
          echo "✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some checks failed. Please review the logs." >> $GITHUB_STEP_SUMMARY
        fi
