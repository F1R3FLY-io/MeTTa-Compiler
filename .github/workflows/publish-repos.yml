name: Publish Package Repositories

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  publish-apt-repo:
    name: Update APT Repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout packages repository
        uses: actions/checkout@v4
        with:
          repository: F1R3FLY-io/mettatron-apt
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: gh-pages

      - name: Download .deb package
        run: |
          # Download the latest .deb from releases
          gh release download --repo F1R3FLY-io/MeTTa-Compiler --pattern '*.deb' --dir pool/main/m/mettatron/
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install aptly
        run: |
          sudo apt-get update
          sudo apt-get install -y aptly gnupg

      - name: Create/Update APT repository
        run: |
          # Initialize aptly if needed
          if [ ! -f ~/.aptly.conf ]; then
            cat > ~/.aptly.conf <<EOF
          {
            "rootDir": "$PWD/.aptly",
            "downloadConcurrency": 4,
            "downloadSpeedLimit": 0,
            "architectures": ["amd64", "arm64"],
            "dependencyFollowSuggests": false,
            "dependencyFollowRecommends": false,
            "dependencyFollowAllVariants": false,
            "dependencyFollowSource": false,
            "dependencyVerboseResolve": false,
            "gpgDisableSign": false,
            "gpgDisableVerify": false,
            "gpgProvider": "gpg",
            "downloadSourcePackages": false,
            "skipLegacyPool": true,
            "ppaDistributorID": "ubuntu",
            "ppaCodename": "",
            "skipContentsPublishing": false,
            "FileSystemPublishEndpoints": {},
            "S3PublishEndpoints": {},
            "SwiftPublishEndpoints": {}
          }
          EOF
          fi

          # Create or update repository
          aptly repo create -distribution=stable -component=main mettatron || true
          aptly repo add mettatron pool/main/m/mettatron/*.deb
          aptly publish repo -skip-signing mettatron

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update repository with latest packages" || true
          git push

  publish-yum-repo:
    name: Update YUM Repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout packages repository
        uses: actions/checkout@v4
        with:
          repository: F1R3FLY-io/mettatron-yum
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: gh-pages

      - name: Download .rpm package
        run: |
          mkdir -p rpms
          gh release download --repo F1R3FLY-io/MeTTa-Compiler --pattern '*.rpm' --dir rpms/
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install createrepo
        run: sudo apt-get update && sudo apt-get install -y createrepo-c

      - name: Create/Update YUM repository
        run: |
          mkdir -p repodata
          createrepo_c .

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update repository with latest packages" || true
          git push

  publish-pacman-repo:
    name: Update Pacman Repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout packages repository
        uses: actions/checkout@v4
        with:
          repository: F1R3FLY-io/mettatron-arch
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: gh-pages

      - name: Download Arch packages
        run: |
          # Create directories for each architecture
          mkdir -p x86_64 aarch64

          # Download .pkg.tar.zst packages from latest release
          # Arch package naming: pkgname-pkgver-pkgrel-arch.pkg.tar.zst
          # e.g., mettatron-0.1.0-1-x86_64.pkg.tar.zst or mettatron-nightly-20250121-1-x86_64.pkg.tar.zst
          gh release download --repo F1R3FLY-io/MeTTa-Compiler --pattern 'mettatron*-x86_64.pkg.tar.zst' --dir x86_64/ || true
          gh release download --repo F1R3FLY-io/MeTTa-Compiler --pattern 'mettatron*-aarch64.pkg.tar.zst' --dir aarch64/ || true

          # Also download PKGBUILD for users who want to build from source (release version)
          curl -o PKGBUILD https://raw.githubusercontent.com/F1R3FLY-io/MeTTa-Compiler/main/packaging/arch/PKGBUILD
          # And PKGBUILD-nightly for nightly builds
          curl -o PKGBUILD-nightly https://raw.githubusercontent.com/F1R3FLY-io/MeTTa-Compiler/main/packaging/arch/PKGBUILD-nightly
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pacman tools
        run: |
          # Install pacman-package-manager for repo-add command
          sudo apt-get update
          # We need to use a container or install from AUR - let's use Docker
          docker pull archlinux:latest

      - name: Create repository databases
        run: |
          # Create repo database for x86_64
          if [ -n "$(ls -A x86_64/*.pkg.tar.zst 2>/dev/null)" ]; then
            docker run --rm \
              -v "$PWD/x86_64:/repo" \
              archlinux:latest \
              bash -c "cd /repo && repo-add mettatron.db.tar.gz *.pkg.tar.zst"
          fi

          # Create repo database for aarch64
          if [ -n "$(ls -A aarch64/*.pkg.tar.zst 2>/dev/null)" ]; then
            docker run --rm \
              -v "$PWD/aarch64:/repo" \
              archlinux:latest \
              bash -c "cd /repo && repo-add mettatron.db.tar.gz *.pkg.tar.zst"
          fi

      - name: Create README
        run: |
          cat > README.md <<'EOF'
          # MeTTaTron Arch Linux Repository

          ## Installation

          ### Option 1: Install from repository (recommended)

          Add the repository to your `/etc/pacman.conf`:

          ```ini
          [mettatron]
          SigLevel = Optional TrustAll
          Server = https://f1r3fly-io.github.io/mettatron-arch/$arch
          ```

          Then install stable or nightly:

          ```bash
          # Stable release
          sudo pacman -Sy mettatron

          # Nightly builds (conflicts with mettatron)
          sudo pacman -Sy mettatron-nightly
          ```

          ### Option 2: Build from PKGBUILD

          **Stable release:**
          ```bash
          curl -O https://f1r3fly-io.github.io/mettatron-arch/PKGBUILD
          makepkg -si
          ```

          **Nightly builds:**
          ```bash
          curl -O https://f1r3fly-io.github.io/mettatron-arch/PKGBUILD-nightly
          makepkg -p PKGBUILD-nightly -si
          ```

          ## Supported Architectures

          - x86_64
          - aarch64 (ARM64)

          ## Packages

          - `mettatron` - Stable releases from tagged versions
          - `mettatron-nightly` - Nightly builds (provides and conflicts with `mettatron`)
          EOF

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update Arch repository with latest packages" || true
          git push

  update-homebrew-tap:
    name: Update Homebrew Tap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: F1R3FLY-io/homebrew-mettatron
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update formula
        run: |
          curl -o Formula/mettatron.rb https://raw.githubusercontent.com/F1R3FLY-io/MeTTa-Compiler/main/packaging/homebrew/mettatron.rb

          # Update SHA256 and version from latest release
          VERSION=$(gh release view --repo F1R3FLY-io/MeTTa-Compiler --json tagName -q .tagName | sed 's/v//')
          sed -i "s/v0.1.0/v$VERSION/" Formula/mettatron.rb

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update formula to latest release" || true
          git push
