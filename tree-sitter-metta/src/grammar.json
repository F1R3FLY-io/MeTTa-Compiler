{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "metta",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "expression"
      }
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "list"
        },
        {
          "type": "SYMBOL",
          "name": "brace_list"
        },
        {
          "type": "SYMBOL",
          "name": "prefixed_expression"
        },
        {
          "type": "SYMBOL",
          "name": "atom_expression"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "brace_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "prefixed_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "prefix",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "exclaim_prefix"
              },
              {
                "type": "SYMBOL",
                "name": "question_prefix"
              },
              {
                "type": "SYMBOL",
                "name": "quote_prefix"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "argument",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        }
      ]
    },
    "exclaim_prefix": {
      "type": "STRING",
      "value": "!"
    },
    "question_prefix": {
      "type": "STRING",
      "value": "?"
    },
    "quote_prefix": {
      "type": "STRING",
      "value": "'"
    },
    "atom_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable"
        },
        {
          "type": "SYMBOL",
          "name": "wildcard"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "operator"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "float_literal"
        },
        {
          "type": "SYMBOL",
          "name": "integer_literal"
        },
        {
          "type": "SYMBOL",
          "name": "boolean_literal"
        }
      ]
    },
    "variable": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "$"
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z0-9_'\\-+*/&]*"
          }
        ]
      }
    },
    "wildcard": {
      "type": "STRING",
      "value": "_"
    },
    "boolean_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "True"
        },
        {
          "type": "STRING",
          "value": "False"
        }
      ]
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 2,
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "[a-zA-Z][a-zA-Z0-9_'\\-+*/]*"
            },
            {
              "type": "PATTERN",
              "value": "[+\\-*/][a-zA-Z0-9_'\\-+*/]+"
            }
          ]
        }
      }
    },
    "operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "arrow_operator"
        },
        {
          "type": "SYMBOL",
          "name": "comparison_operator"
        },
        {
          "type": "SYMBOL",
          "name": "assignment_operator"
        },
        {
          "type": "SYMBOL",
          "name": "type_annotation_operator"
        },
        {
          "type": "SYMBOL",
          "name": "rule_definition_operator"
        },
        {
          "type": "SYMBOL",
          "name": "punctuation_operator"
        },
        {
          "type": "SYMBOL",
          "name": "arithmetic_operator"
        },
        {
          "type": "SYMBOL",
          "name": "logic_operator"
        }
      ]
    },
    "arrow_operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "->"
          },
          {
            "type": "STRING",
            "value": "<-"
          },
          {
            "type": "STRING",
            "value": "<="
          },
          {
            "type": "STRING",
            "value": "<<-"
          }
        ]
      }
    },
    "comparison_operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "=="
          },
          {
            "type": "STRING",
            "value": ">"
          },
          {
            "type": "STRING",
            "value": "<"
          }
        ]
      }
    },
    "assignment_operator": {
      "type": "STRING",
      "value": "="
    },
    "type_annotation_operator": {
      "type": "STRING",
      "value": ":"
    },
    "rule_definition_operator": {
      "type": "STRING",
      "value": ":="
    },
    "punctuation_operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": ";"
          },
          {
            "type": "STRING",
            "value": "|"
          },
          {
            "type": "STRING",
            "value": ","
          },
          {
            "type": "STRING",
            "value": "@"
          },
          {
            "type": "STRING",
            "value": "&"
          },
          {
            "type": "STRING",
            "value": "..."
          },
          {
            "type": "STRING",
            "value": "."
          }
        ]
      }
    },
    "arithmetic_operator": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[+\\-*/]"
        }
      }
    },
    "logic_operator": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "!?"
          },
          {
            "type": "STRING",
            "value": "?!"
          }
        ]
      }
    },
    "string_literal": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\""
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[^\"\\\\]"
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "\\"
                    },
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "STRING",
                          "value": "n"
                        },
                        {
                          "type": "STRING",
                          "value": "t"
                        },
                        {
                          "type": "STRING",
                          "value": "r"
                        },
                        {
                          "type": "STRING",
                          "value": "\\"
                        },
                        {
                          "type": "STRING",
                          "value": "\""
                        },
                        {
                          "type": "PATTERN",
                          "value": "."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": "\""
          }
        ]
      }
    },
    "float_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 4,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "-"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "PATTERN",
              "value": "\\d+"
            },
            {
              "type": "STRING",
              "value": "."
            },
            {
              "type": "PATTERN",
              "value": "\\d+"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "PATTERN",
                      "value": "[eE]"
                    },
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "PATTERN",
                          "value": "[+-]"
                        },
                        {
                          "type": "BLANK"
                        }
                      ]
                    },
                    {
                      "type": "PATTERN",
                      "value": "\\d+"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      }
    },
    "integer_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 3,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "-"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "PATTERN",
              "value": "\\d+"
            }
          ]
        }
      }
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 10,
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ";"
                },
                {
                  "type": "PATTERN",
                  "value": "[^\\n]*"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "//"
                },
                {
                  "type": "PATTERN",
                  "value": "[^\\n]*"
                }
              ]
            }
          ]
        }
      }
    },
    "block_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 10,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "/*"
            },
            {
              "type": "PATTERN",
              "value": "([^*]|\\*[^/])*"
            },
            {
              "type": "STRING",
              "value": "*/"
            }
          ]
        }
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}